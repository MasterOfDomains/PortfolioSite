@model PagedList.IPagedList<PortfolioSite.Models.Item>

@using PortfolioSite.Models
@using PortfolioSite.Helpers
@using PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Joe Rogers Fashions";

    string searchString = ViewBag.SearchStringGet;
    string searchReminder = "";
    if (!String.IsNullOrEmpty(searchString))
    {
        searchReminder = "Search Results For";
    }
    bool? isMale = ViewBag.IsMaleGet;
    //bool isFemale = ViewBag.IsFemaleGet;

    string noMatches = ViewBag.NoMatches;

    string sortOrder = ViewBag.SortOrderGet;
    string highestFirst = "checked=\"checked\"";
    string lowestFirst = "";
    if (!String.IsNullOrEmpty(sortOrder))
    {
        if (sortOrder.Equals("LowestFirst"))
        {
            highestFirst = "";
            lowestFirst = "checked=\"checked\"";
        }
    }
}

<h1 class="store-banner">The Joe Rogers Fashion Warehouse</h1>

<div class="container-fluid">

@using (Html.BeginForm())
{
    <div class="filter-control-panel">
        <div style="padding-left: 5px; padding-top: 2px; text-align: center;">
            <span style="font-size: large;">Choose any combination of the following options to narrow your search.</span>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="filter-panel-section">
                    <table>
                        <tr>
                            <td>
                                <span class="filter-panel-section">Male</span>
                            </td>
                            <td>
                                @Html.RadioButton("IsMale", "true", (isMale ?? false), new { @class = "radio" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="filter-panel-section">Female</span>
                            </td>
                            <td>
                                @Html.RadioButton("IsMale", "false", (!isMale ?? false), new { @class = "radio" })
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="filter-panel-section">
                    Category @Html.DropDownList("CategoryNameId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="filter-panel-section">
                    <table>
                        @foreach (SelectListItem ageGroup in ViewBag.AgeGroupId)
                    {
                        string isChecked = "";
                        if (ageGroup.Selected)
                        {
                            isChecked = "checked=\"checked\"";
                        }
                        <tr>
                            <td><span class="filter-panel-section">@ageGroup.Text</span></td>
                            <td><input type="radio" name="AgeGroupId" value="@ageGroup.Value" class="radio" @isChecked /></td>
                        </tr>
                    }
                    </table>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="filter-panel-section">
                    <table>
                        <tr>
                            <th colspan="2">
                                Order by Price
                            </th>
                        </tr>
                        <tr>
                            <td>Highest To Lowest</td>
                            <td>
                                <input type="radio" name="SortOrder" value="HighestFirst" @highestFirst />
                            </td>
                        </tr>
                        <tr>
                            <td>Lowest To Highest</td>
                            <td>
                                <input type="radio" name="SortOrder" value="LowestFirst" @lowestFirst />
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="row" style="padding-bottom: inherit">
                <div class="col-md-8" style="align-content:flex-end;">
                    @Html.TextBox("SearchString", null, new { @class = "form-control store-search" })
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Refine Search" class="btn btn-default" />
                </div>
                <div class="col-md-2">
                    <a href="~/Store/" style="font-size: larger; color: #00ffff;">Clear Search</a>
                </div>
        </div>
        <div class="row">
            <div style="text-align:center; font-size: large">@searchReminder <u>@searchString</u></div>
        </div>
    </div>
}

    <div class="row">
@foreach (var item in Model)
{
    var imagePath = new ImagePath(ImagePath.ImageCategory.Clothing);
    
        <div class="col-md-6">
            <div class="store-display">
                <table border="0" style="height: 100%; width: 100%">
                    <tr>

                        <td>
                            <div class="store-picture"> <!-- No Style Defined -->
                                <a href="@Url.Action("Details", "Store", new { id = item.ItemID })" alt="View Details">
                                    <img src="~/@imagePath.GetPath(item, true)"
                                         height="250" width="250"
                                         alt="@Html.DisplayFor(modelItem => item.Name)" />
                                </a>
                            </div>
                            <div class="price">$@Html.DisplayFor(modelItem => item.Price)</div>
                        </td>
                        <td>
                            <div class="product-info">
                                <div class="item-name">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </div>
                                <div class="category">
                                    Category:
                                    @PersonTypeHelper.GetPersonType(item.Category, true)
                                    @Html.DisplayFor(modelItem => item.Category.CategoryName.Name)
                                </div>
                                <div class="description">
                                    <p>
                                        @Html.DisplayFor(modelItem => item.Blurb)
                                        @Html.Partial("_LengthyDescription")
                                    </p>
                                </div>
                                <div class="view-details">
                                    <a href="@Url.Action("Details", "Store", new { id = item.ItemID })" alt="View Details">
                                        View Details
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
}
    </div>

<div class="store-floor" style="font-size: 30px; min-width: 50%; text-align:center;">@noMatches</div>

    <div style="margin-top: 50px;">

        @{
            if (Model.Count() > 0)
            {
                <div class="pagenumber">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
                <div class="pagination-container-centerer">
                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new
                        {
                            page,
                            sortOrderGet = ViewBag.SortOrderGet,
                            searchStringGet = ViewBag.SearchStringGet,
                            isMaleGet = ViewBag.IsMaleGet,
                            ageGroupIdGet = ViewBag.AgeGroupIdGet,
                            categoryNameIdGet = ViewBag.CategoryNameIdGet
                        }))
                </div>
            }
        }
    </div>

</div> <!-- Container -->